name: Control-M Integration Branch
on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      isRelease:
        required: true
        type: string
jobs:
  Deployment-DEV:
    runs-on: ${{ inputs.runner }}
    environment: dev
    steps:
    - uses: actions/checkout@v3
    - name: codigo de ControlM
      run: |
        echo "c√≥digo de control M en DEV"

  isRelease:
    needs: Deployment-DEV
    runs-on: ${{ inputs.runner }}      
    if: ${{ inputs.isRelease == 'true' }}
    steps:
    - uses: actions/checkout@v3
    - name: validate change   
      run: |
        version_file_path=$(find . -name VERSION)
        version=$(cat $version_file_path)
        major=$(echo $version | cut -d'.' -f1)
        minor=$(echo $version | cut -d'.' -f2)
        patch=$(echo $version | cut -d'.' -f3)
        message=$(git log -1 --pretty=format:"%s")
        if [[ "${message}" == *"chore:"* ]]; then
          new_major=$((major + 1))
          new_version="$new_major.$minor.$patch"
          echo $new_version 
        elif [[ "${message}" == *"fix:"* ]]; then
          new_minor=$((minor + 1))
          new_version="$major.$new_minor.$patch"
          echo $new_version 
        elif [[ "${message}" == *"feat:"* ]];
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo $new_version 
        else
          echo "Please set the commit format "
        fi